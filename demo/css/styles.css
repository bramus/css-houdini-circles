:root {
    --size: 20em;
}

@media (min-width: 40em) {
    :root {
        --size: 40em;
    }
}

* {
    box-sizing: content-box;
}

html,
body {
    margin: 0;
    padding: 0;
    height: 100vh;
}

body {
    background-color: white;
    display: flex;
    align-items: center;
    flex-direction: column;
    font-family: sans-serif;
    justify-content: center;
}

.css-houdini {
    height: var(--size);
    padding: 1em;
    width: var(--size);
}

.circles {
    --colors: #f94144, #f3722c, #f8961e, #f9844a, #f9c74f, #90be6d, #43aa8b,
        #4d908e, #577590, #277da1;
    --min-radius: 20;
    --max-radius: 100;
    --num-circles: 30;
    --min-opacity: 10;
    --max-opacity: 50;
    --seed: 42;

    background-image: paint(circles);

    transition: --num-circles 0.5s ease-in-out, --min-opacity 0.5s ease-in-out;
}

.circles:hover {
    --num-circles: 10;
    --min-opacity: 40;
}

@property --colors {
    syntax: '<color>#';
    initial-value: #71a7ee, #7940c1;
    inherits: false;
}
@property --min-radius {
    syntax: '<number>';
    initial-value: 10;
    inherits: false;
}
@property --max-radius {
    syntax: '<number>';
    initial-value: 50;
    inherits: false;
}
@property --min-opacity {
    syntax: '<number>';
    initial-value: 10;
    inherits: false;
}
@property --max-opacity {
    syntax: '<number>';
    initial-value: 80;
    inherits: false;
}
@property --num-circles {
    syntax: '<number>';
    initial-value: 5;
    inherits: false;
}
@property --seed {
    syntax: '<number>';
    initial-value: 0;
    inherits: true;
}
